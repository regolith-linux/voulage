name: Test Build Package

on:
  workflow_dispatch:
    inputs:
      extension:
        description: 'Build Extension Script'
        required: true
        default: ext-debian.sh
      package-name:
        description: 'Package Name'
        required: true
      package-url:
        description: 'Package URL (public git)'
        required: true
      package-ref:
        description: 'Package Ref (branch, tag, or hash)'
        required: true
      distro:
        description: 'Package Distro'
        required: true
        options:
          - debian
          - ubuntu
      codename:
        description: 'Package Codename (e.g. focal, bullseye)'
        required: true
      stage:
        description: 'Package Stage'
        required: true
        options:
          - experimental
          - unstable
          - testing
          - stable
      build-os-image:
        description: 'Build package on (ubuntu-22.04)'
        required: true
        default: ubuntu-22.04

jobs:
  build:
    runs-on: ${{ inputs.build-os-image }}
    steps:
      - uses: actions/checkout@v4
      - name: Environment Setup
        run: |
          sudo apt update
          sudo apt install -y devscripts

          mkdir -p ~/.gnupg/
          printf "${{ secrets.PACKAGE_PRIVATE_KEY2 }}" | base64 --decode > ~/.gnupg/private.key
          gpg --batch --import ~/.gnupg/private.key

      - name: Build ${{ inputs.package-name }} @ ${{ inputs.package-ref }} for ${{ inputs.distro }}-${{ inputs.codename }} (${{ inputs.stage }})
        run: |
          set -x

          export DEBEMAIL=regolith.linux@gmail.com
          export DEBFULLNAME="Regolith Linux"

          ${{ github.workspace }}/.github/scripts/local-build.sh \
            --extension ${{ github.workspace }}/.github/scripts/${{ inputs.extension }} \
            --git-repo-path "${{ github.workspace }}" \
            --package-name ${{ inputs.package-name }} \
            --package-url "${{ inputs.package-url }}" \
            --package-ref "${{ inputs.package-ref }}" \
            --distro "${{ inputs.distro }}" \
            --codename "${{ inputs.codename }}" \
            --stage "${{ inputs.stage }}"
