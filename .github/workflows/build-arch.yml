name: Package Builder Arch (Prototype)

on:
  workflow_dispatch:

concurrency:
  group: arch_builder_v1
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.host-os }}
    strategy:
      matrix:
        stage: [experimental, unstable] #, testing, release] 
        distro-codename: [arch-testing-amd64]
        include:
          - distro-codename: arch-testing-amd64
            host-os: [self-hosted, Linux, amd64, arch]
            arch: amd64
            distro: arch
            codename: testing

          - stage: experimental
            suite: experimental
            component: main
          - stage: unstable
            suite: unstable
            component: main
    steps:
      - uses: actions/checkout@v4
      - name: Set Job Parameters
        id: init
        run: |
          echo "MANIFEST_PATH=${{ github.workspace }}/manifests" >> $GITHUB_OUTPUT
          echo "PKG_REPO_PATH=${{ github.workspace }}/repo" >> $GITHUB_OUTPUT
          echo "PKG_BUILD_DIR=${{ github.workspace }}/packages" >> $GITHUB_OUTPUT
          echo "GH_REPO_ROOT=${{ github.workspace }}" >> $GITHUB_OUTPUT
          echo "stage=${{ matrix.stage }}" >> $GITHUB_OUTPUT
          echo "distro=${{ matrix.distro }}" >> $GITHUB_OUTPUT
          echo "codename=${{ matrix.codename }}" >> $GITHUB_OUTPUT
          echo "arch=${{ matrix.arch }}" >> $GITHUB_OUTPUT
          echo "target=${{ matrix.stage }}-${{ matrix.distro }}-${{ matrix.codename }}-${{ matrix.arch }}" >> $GITHUB_OUTPUT
          echo "suite=${{ matrix.suite }}" >> $GITHUB_OUTPUT
          echo "component=${{ matrix.component }}" >> $GITHUB_OUTPUT
          echo "repo_url=https://regolith-desktop.org/${{ matrix.stage }}-${{ matrix.distro }}-${{ matrix.codename }}-${{ matrix.arch }}" >> $GITHUB_OUTPUT
      - name: Env setup
        run: |
          set -e
          mkdir ${{ steps.init.outputs.MANIFEST_PATH }} || true
          mkdir ${{ steps.init.outputs.PKG_BUILD_DIR }} || true
      - name: Pull Manifest
        run: |
          set -e
          wget -P "${{ steps.init.outputs.PKG_REPO_PATH }}" "https://regolith-desktop.org/${{ steps.init.outputs.target }}/manifest.txt" || true
          echo "Previous manifest:"
          cat ${{ steps.init.outputs.PKG_REPO_PATH }}/manifest.txt || true
      - name: Check for changes
        id: changes
        run: |
          set -e
          CHANGE_OUTPUT=$(${{ steps.init.outputs.GH_REPO_ROOT }}/.github/scripts/main.sh \
            check \
            --extension ${{ steps.init.outputs.GH_REPO_ROOT }}/.github/scripts/ext-arch.sh \
            --git-repo-path ${{ steps.init.outputs.GH_REPO_ROOT }} \
            --manifest-path ${{ steps.init.outputs.MANIFEST_PATH }} \
            --pkg-build-path ${{ steps.init.outputs.PKG_BUILD_DIR }} \
            --pkg-publish-path ${{ steps.init.outputs.PKG_REPO_PATH }} \
            --distro "${{ steps.init.outputs.distro }}" \
            --codename "${{ steps.init.outputs.codename }}" \
            --arch "${{ steps.init.outputs.arch }}" \
            --stage "${{ steps.init.outputs.stage }}" \
            --suite "${{ steps.init.outputs.suite }}" \
            --component "${{ steps.init.outputs.component }}" | tail -n1)
          if [ "$CHANGE_OUTPUT" == "No package changes found, exiting." ]; then
            echo "changed=0" >> $GITHUB_OUTPUT
            echo "No package changes to build"
          else
            echo "changed=1" >> $GITHUB_OUTPUT
            echo "New Manifest: "
            cat ${{ steps.init.outputs.MANIFEST_PATH }}/next-manifest.txt
          fi
      - uses: webfactory/ssh-agent@v0.9.0
        if: steps.changes.outputs.changed == 1
        with:
          ssh-private-key: ${{ secrets.KAMATERA_SSH_KEY }}
      - name: Pull repo
        if: steps.changes.outputs.changed == 1
        run: |
          set -e
          ssh-keyscan -H ${{ secrets.KAMATERA_HOSTNAME }} >> ~/.ssh/known_hosts
          scp -r root@${{ secrets.KAMATERA_HOSTNAME }}:/var/www/html/${{ steps.init.outputs.target }}/* "${{ steps.init.outputs.PKG_REPO_PATH }}" \
            || mkdir -p "${{ steps.init.outputs.PKG_REPO_PATH }}" || true
      - name: Build
        if: steps.changes.outputs.changed == 1
        run: |
          set -e
          export DEBEMAIL="regolith.linux@gmail.com"
          export DEBFULLNAME="Regolith Linux"
          export DEBIAN_FRONTEND=noninteractive
          mkdir -p ~/.gnupg/
          printf "${{ secrets.PACKAGE_PRIVATE_KEY2 }}" | base64 --decode > ~/.gnupg/private.key
          gpg --batch --import ~/.gnupg/private.key
          ${{ steps.init.outputs.GH_REPO_ROOT }}/.github/scripts/main.sh \
            build \
            --extension ${{ steps.init.outputs.GH_REPO_ROOT }}/.github/scripts/ext-arch.sh \
            --git-repo-path ${{ steps.init.outputs.GH_REPO_ROOT }} \
            --manifest-path ${{ steps.init.outputs.MANIFEST_PATH }} \
            --pkg-build-path ${{ steps.init.outputs.PKG_BUILD_DIR }} \
            --pkg-publish-path ${{ steps.init.outputs.PKG_REPO_PATH }} \
            --distro "${{ steps.init.outputs.distro }}" \
            --codename "${{ steps.init.outputs.codename }}" \
            --arch "${{ steps.init.outputs.arch }}" \
            --stage "${{ steps.init.outputs.stage }}" \
            --suite "${{ steps.init.outputs.suite }}" \
            --component "${{ steps.init.outputs.component }}" | tee -a ${{ steps.init.outputs.GH_REPO_ROOT }}/CHANGELOG_${{ steps.init.outputs.target }}.raw.txt
          if [ -f ${{ steps.init.outputs.MANIFEST_PATH }}/next-manifest.txt ]; then
            echo "Temp manifest not deleted by main.sh, build aborted/failed."
            echo "changed=0" >> $GITHUB_OUTPUT
            exit 1
          else
            cat ${{ steps.init.outputs.GH_REPO_ROOT }}/CHANGELOG_${{ steps.init.outputs.target }}.raw.txt | grep ^CHLOG: | cut -c 7- > ${{ steps.init.outputs.GH_REPO_ROOT }}/CHANGELOG_${{ steps.init.outputs.target }}.txt
          fi
      - name: Deploy via rsync
        if: steps.changes.outputs.changed == 1
        run: |
          set -e
          set -x
          echo rsync -avzh ${{ steps.init.outputs.PKG_REPO_PATH }}/* root@package-host:/var/www/html/${{ steps.init.outputs.target }}
      - name: Log Build Output
        if: steps.changes.outputs.changed == 1
        run: |
          cat ${{ steps.init.outputs.PKG_REPO_PATH }}/manifest.txt || true
          echo "PKG_BUILD_DIR:"
          find ${{ steps.init.outputs.PKG_BUILD_DIR }}
      - uses: actions/upload-artifact@v4
        if: steps.changes.outputs.changed == 1
        with:
          name: CHANGELOG_${{ steps.init.outputs.target }}
          path: |
            ${{ steps.init.outputs.GH_REPO_ROOT }}/CHANGELOG_${{ steps.init.outputs.target }}.txt
  generate-release:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v4
      - name: Concat Release Notes
        id: release-setup
        run: |
          set -e
          echo "TIMESTAMP=$(date +%Y%m%d_%H%M%S)" >> $GITHUB_OUTPUT
          FILES=$(find . -name CHANGELOG\*)
          if [ -n "$FILES" ]; then
            cat CHANGELOG_*/CHANGELOG_*.txt >> CHANGELOG.txt
            echo "changed=1" >> $GITHUB_OUTPUT
          else
            echo "changed=0" >> $GITHUB_OUTPUT
          fi
      - uses: softprops/action-gh-release@v2
        if: steps.release-setup.outputs.changed == 1
        with:
          body: See CHANGELOG.txt for updates and manifests for current state of repos.
          name: Package Build ${{ steps.release-setup.outputs.TIMESTAMP }}
          tag_name: pkgbuild-${{ steps.release-setup.outputs.TIMESTAMP }}
          files: |
            *.txt