name: Purge Package

on:
  workflow_dispatch:
    inputs:
      stage:
        description: 'Stage (unstable, testing, release)'
        required: true
      distro:
        description: 'Distro (debian, ubuntu)'
        required: true
      codename:
        description: 'Codename (focal, impish, jammy, bullseye)'
        required: true
      arch:
        description: 'Arch: (amd64, arm64)'
        required: true
      package:
        description: 'Package Name'
        required: true

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Env Setup
        id: init
        run: |
          echo ::set-output name=s3_bucket::regolith-${{ github.event.inputs.stage }}-${{ github.event.inputs.distro }}-${{ github.event.inputs.codename }}-${{ github.event.inputs.arch }}
          sudo apt update
          sudo apt install -y devscripts reprepro
          sudo apt install -y python3-pip          
          sudo pip install awscli
          mkdir -p ~/.gnupg/
          printf "${{ secrets.PACKAGE_PRIVATE_KEY2 }}" | base64 --decode > ~/.gnupg/private.key
          gpg --batch --import ~/.gnupg/private.key
      - name: Pull from S3
        run: |
          rm -Rf ${{ github.workspace }}/generated-repo
          aws s3 sync \
            s3://${{ steps.init.outputs.s3_bucket }} \
            ${{ github.workspace }}/generated-repo \
            --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      - name: Purge Package
        id: purge
        run: |
          set -x
          export DEBEMAIL=regolith.linux@gmail.com
          export DEBFULLNAME="Regolith Linux"
          pkg_name=${{ github.event.inputs.package }}
          distro=${{ github.event.inputs.distro }}
          codename=${{ github.event.inputs.codename }}
          stage=${{ github.event.inputs.stage }}
          arch=${{ github.event.inputs.arch }}

          sudo chown -R runner generated-repo

          # Remove package from debian repo
          reprepro --basedir generated-repo removesrc $codename $pkg_name

          # Remove package manifest entry
          sed -i /^$pkg_name[[:space:]]/d generated-repo/manifest.txt
      - name: List Repo Packages
        run: |
          set -x
          reprepro --basedir generated-repo dumpreferences
      - name: Push to S3
        run: |
          set -x
          aws s3 sync \
            ${{ github.workspace }}/generated-repo/ \
            s3://${{ steps.init.outputs.s3_bucket }} \
            --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
